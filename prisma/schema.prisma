// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  personID    String    @id @default(uuid()) @map("person_id")
  firstName   String    @map("first_name")
  lastName    String    @map("last_name")
  dob         DateTime? @db.Date
  address     String?
  numberPhone String?   @unique @map("number_phone")
  createdAt   DateTime? @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")
  customer    Customer?
  staff       Staff?
  admin       Admin?

  @@map("person")
}

model Customer {
  customerID      String            @id @default(uuid()) @map("customer_id")
  customer        Person            @relation(fields: [customerID], references: [personID])
  picture         String            @map("picture")
  email           String            @unique
  deliveryAddress deliveryAddress[]
  cart            Cart[]
  orders          Order[]
  Account         Account[]

  @@map("customer")
}

model Staff {
  staffID   String  @id @map("staff_id")
  staff     Person  @relation(fields: [staffID], references: [personID])
  account   Account @relation(fields: [accountID], references: [accountID])
  accountID String  @unique @map("account_id")

  @@map("staff")
}

model Admin {
  adminID        String           @id @map("admin_id")
  admin          Person           @relation(fields: [adminID], references: [personID])
  account        Account          @relation(fields: [accountID], references: [accountID])
  accountID      String           @unique @map("account_id")
  productReceipt ProductReceipt[]

  @@map("admin")
}

model Account {
  accountID          String    @id @default(uuid()) @map("account_id")
  email              String    @unique
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  roleID             String    @map("role_id")
  role               Role      @relation(fields: [roleID], references: [roleID])
  staff              Staff?
  admin              Admin?
  Customer           Customer? @relation(fields: [customerCustomerID], references: [customerID])
  customerCustomerID String?

  @@map("account")
}

model Role {
  roleID   String    @id @default(uuid()) @map("role_id")
  account  Account[]
  roleName String    @map("role_name")

  @@map("role")
}

model Product {
  productID             String                  @id @default(uuid()) @map("product_id")
  productName           String                  @unique @map("product_name")
  productPrice          BigInt                  @map("product_price")
  productCount          BigInt                  @map("product_count")
  productNote           String?                 @map("product_note")
  productImage          String                  @map("product_image")
  createdAt             DateTime                @default(now()) @map("created_at")
  updatedAt             DateTime                @updatedAt @map("updated_at")
  typeOfProductID       String                  @map("type_of_product_id")
  typeOfProduct         TypeOfProduct           @relation(fields: [typeOfProductID], references: [typeID])
  discountID            String?                 @map("discount_id")
  discount              Discount?               @relation(fields: [discountID], references: [discountID])
  Cart                  Cart[]
  orderDetails          OrderDetails[]
  productReceiptDetails ProductReceiptDetails[]

  @@map("product")
}

model TypeOfProduct {
  typeID    String    @id @default(uuid()) @map("type_id")
  typeName  String    @unique @map("type_name")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  product   Product[]

  @@map("type_of_product")
}

model Discount {
  discountID      String    @id @default(uuid()) @map("discount_id")
  discountPercent Int       @default(0) @map("discount_percent")
  startDate       DateTime  @map("start_date")
  endDate         DateTime  @map("end_date")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  product         Product[]

  @@map("discount")
}

model deliveryAddress {
  deliveryAddressID String   @id @default(uuid()) @map("delivery_address_id")
  addressDetail     String   @map("address_detail")
  numberPhone       String   @map("number_phone")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  customerID        String   @map("customer_id")
  customer          Customer @relation(fields: [customerID], references: [customerID])

  @@map("delivery_address")
}

model Cart {
  customer     Customer @relation(fields: [customerID], references: [customerID])
  customerID   String   @map("customer_id")
  product      Product  @relation(fields: [productID], references: [productID])
  productID    String   @map("product_id")
  productCount Int      @default(1) @map("product_count")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@id([customerID, productID])
  @@map("cart")
}

model Order {
  orderID      String         @id @default(uuid()) @map("order_id")
  orderStatus  Int            @default(0) @map("order_status")
  orderDate    DateTime       @default(now()) @map("order_date")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  customer     Customer       @relation(fields: [customerID], references: [customerID])
  customerID   String         @map("customer_id")
  orderDetails OrderDetails[]

  @@map("order")
}

model OrderDetails {
  order        Order    @relation(fields: [orderID], references: [orderID])
  orderID      String   @map("order_id")
  product      Product  @relation(fields: [productID], references: [productID])
  productID    String   @map("product_id")
  productCount Int      @map("product_count")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@id([orderID, productID])
  @@map("order_details")
}

model ProductReceipt {
  receiptID             String                  @id @default(uuid()) @map("receipt_id")
  receiptDate           DateTime                @default(now()) @map("receipt_date")
  admin                 Admin                   @relation(fields: [adminID], references: [adminID])
  adminID               String                  @map("admin_id")
  createdAt             DateTime                @default(now()) @map("created_at")
  updatedAt             DateTime                @updatedAt @map("updated_at")
  productReceiptDetails ProductReceiptDetails[]

  @@map("product_receipt")
}

model ProductReceiptDetails {
  productReceipt ProductReceipt @relation(fields: [receiptID], references: [receiptID])
  receiptID      String         @map("receipt_id")
  product        Product        @relation(fields: [productID], references: [productID])
  productID      String         @map("product_id")
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")

  @@id([receiptID, productID])
  @@map("product_receipt_details")
}
